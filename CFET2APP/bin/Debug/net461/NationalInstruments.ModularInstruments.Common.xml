<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NationalInstruments.ModularInstruments.Common</name>
    </assembly>
    <members>
        <member name="T:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService">
            <summary>
            Provides access to the attributes that the underlying modular 
            instruments driver exposes.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
             The class exposes attributes that are not exposed in the .NET class library for the driver.
            </remarks>
            <lastupdated>9/16/2016 9:13:18 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.#ctor(NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase)">
            <exclude/>
            <lastupdated>12/11/2006 3:59:36 PM</lastupdated>
            <updatedby>NI</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeString(System.Int64)">
            <summary>
            Queries the value of a <see cref="T:System.String"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">The identifier that represents the attribute.</param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item><description>State caching is disabled for the entire session or for the particular attribute. </description></item>
              <item><description>State caching is enabled and the currently cached value is invalid. </description></item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <lastupdated>9/16/2016 9:13:34 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeString(System.Int64,System.String)">
            <summary>
            Queries the value of a <see cref="T:System.String"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/16/2016 9:13:35 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeDouble(System.Int64)">
            <summary>
            Queries the value of a <see cref="T:System.Double"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <lastupdated>9/16/2016 9:13:24 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeDouble(System.Int64,System.String)">
            <summary>
            Queries the value of a <see cref="T:System.Double"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/16/2016 9:13:25 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeInteger(System.Int64)">
            <summary>
            Queries the value of an <see cref="T:System.Int32"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <lastupdated>9/16/2016 9:13:30 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeInteger(System.Int64,System.String)">
            <summary>
            Queries the value of an <see cref="T:System.Int32"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/16/2016 9:13:31 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeInt32(System.Int64)">
            <summary>
            Queries the value of an <see cref="T:System.Int32"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <lastupdated>9/16/2016 9:13:26 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeInt32(System.Int64,System.String)">
            <summary>
            Queries the value of an <see cref="T:System.Int32"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/16/2016 9:13:27 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeInt64(System.Int64)">
            <summary>
            Queries the value of an <see cref="T:System.Int64"/> attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <lastupdated>9/16/2016 9:13:28 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeInt64(System.Int64,System.String)">
            <summary>
            Queries the value of an <see cref="T:System.Int64"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/16/2016 9:13:29 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeBoolean(System.Int64)">
            <summary>
            Queries the value of a <see cref="T:System.Boolean"/> attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:22 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeBoolean(System.Int64,System.String)">
            <summary>
            Queries the value of a <see cref="T:System.Boolean"/> attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/16/2016 9:13:23 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeSession(System.Int64)">
            <summary>
            Queries the value of a session attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <lastupdated>9/16/2016 9:13:32 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.GetAttributeSession(System.Int64,System.String)">
            <summary>
            Queries the value of a session attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <returns>
            The value of attribute.
            </returns>
            <remarks>
            You can use this method to get the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <lastupdated>9/16/2016 9:13:33 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeString(System.Int64,System.String)">
            <summary>
            Sets the value of a <see cref="T:System.String"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="value"/> is <see langword="null"/>.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:47 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeString(System.Int64,System.String,System.String)">
            <summary>
            Sets the value of a <see cref="T:System.String"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.<para></para>
                   - or -<para></para>
             <paramref name="value"/> is <see langword="null"/>.<para></para>
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item><description>State caching is disabled for the entire session or for the particular attribute. </description></item>
              <item><description>State caching is disabled for the entire session or for the particular attribute. </description></item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:48 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeDouble(System.Int64,System.Double)">
            <summary>
            Sets the value of a <see cref="T:System.Double"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:38 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeDouble(System.Int64,System.String,System.Double)">
            <summary>
            Sets the value of a <see cref="T:System.Double"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:39 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeBoolean(System.Int64,System.Boolean)">
            <summary>
            Sets the value of a <see cref="T:System.Boolean"/> attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:36 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeBoolean(System.Int64,System.String,System.Boolean)">
            <summary>
            Sets the value of a <see cref="T:System.Boolean"/> attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:37 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeInteger(System.Int64,System.Int64)">
            <summary>
            Sets the value of an <see cref="T:System.Int32"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.<para indent="true"></para>
                   - or -<para indent="true"></para>
             <paramref name="value"/> is out of the driver's supported range of values.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:44 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeInteger(System.Int64,System.String,System.Int64)">
            <summary>
            Sets the value of an <see cref="T:System.Int32"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:44 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeInt32(System.Int64,System.Int32)">
            <summary>
            Sets the value of an <see cref="T:System.Int32"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.<para indent="true"></para>
                   - or -<para indent="true"></para>
             <paramref name="value"/> is out of the driver's supported range of values.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:40 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeInt32(System.Int64,System.String,System.Int32)">
            <summary>
            Sets the value of an <see cref="T:System.Int32"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:41 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeInt64(System.Int64,System.Int64)">
            <summary>
            Sets the value of an <see cref="T:System.Int64"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.<para indent="true"></para>
                   - or -<para indent="true"></para>
             <paramref name="value"/> is out of the driver's supported range of values.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:42 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeInt64(System.Int64,System.String,System.Int64)">
            <summary>
            Sets the value of an <see cref="T:System.Int64"/>   attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:43 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeSession(System.Int64,System.IntPtr)">
            <summary>
            Sets the value of a session attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:45 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.AdvancedPropertyAccessService.SetAttributeSession(System.Int64,System.String,System.IntPtr)">
            <summary>
            Sets the value of a session attribute. 
            </summary>
            <param name="attributeIdentifier">
            The identifier that represents the attribute.
            </param>
            <param name="repeatedCapability">
            If the attribute is channel-based, this parameter specifies the name of the channel on which to obtain the value of the attribute.
            </param>
            <param name="value">
            The value you want to set the attribute to.
            </param>
            <exception cref="T:System.InvalidOperationException">
             <paramref name="attributeIdentifier"/> is out of the driver's supported range of values.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="repeatedCapability"/> is <see langword="null"/>.
            </exception>
            <remarks>
            This is a low-level method that you can use to set the values of instrument-specific attributes and inherent IVI attributes. If the attribute represents an instrument state, this method performs instrument I/O in the following cases: 
            <list type="bullet">
              <item>
               <description>
            State caching is disabled for the entire session or for the particular attribute. 
            </description>
              </item>
              <item>
               <description>
            State caching is enabled and the currently cached value is invalid. 
            </description>
              </item>
             </list>
            </remarks>
            <lastupdated>9/16/2016 9:13:46 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.ITClockSynchronizableDevice">
            <summary>Devices accessible through <format type="monospace">TClockSynchronizableDevicesCollection</format>
             are the modular instruments that can be synchronized 
            using NI-TClk technology. 
            </summary>
            <remarks>
            This interface provides a way for you to use modular instruments driver classes together with <format type="monospace">TClock</format> types.
            A driver class in .NET implements this interface if the modular instrument driver supports <format type="monospace">TClock</format> . 
            For example, because the NI-Scope .NET API supports <format type="monospace">TClock</format> , the <format type="monospace">NIScope</format> type implements this interface.
            </remarks>
            <lastupdated>9/16/2016 9:14:02 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.ITClockSynchronizableDevice.Handle">
            <summary>
            Gets the underlying modular instrument driver session handle.
            </summary>
            <value>
            An instance of <see cref="T:System.Runtime.InteropServices.HandleRef"/> encapsulating the underlying modular instrument driver session handle.
            </value>
            <lastupdated>9/16/2016 9:14:03 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.ModularInstrumentsException">
            <summary>
            Represents the exception that is returned when a modular instruments driver error occurs.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            This exception is returned when the underlying driver returns an error. An error is represented as a negative number and is accessible  through the <see cref="P:NationalInstruments.ModularInstruments.ModularInstrumentsException.Error"/> property.
            </remarks>
            <lastupdated>9/16/2016 9:13:49 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.ModularInstrumentsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ModularInstruments.ModularInstrumentsException"/> class.
            </summary>
            <lastupdated>10/27/2006 11:00:00 AM</lastupdated>
            <updatedby>NI</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.ModularInstrumentsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  <see cref="T:NationalInstruments.ModularInstruments.ModularInstrumentsException"/> class with the specified error message.
            </summary>
            <param name="message">
            The error message that explains the cause of the exception.
            </param>
            <lastupdated>10/27/2006 11:00:22 AM</lastupdated>
            <updatedby>NI</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.ModularInstrumentsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ModularInstruments.ModularInstrumentsException"/> class with the specified error message and a reference to the inner exception that is the cause of the exception.
            </summary>
            <param name="message">
            The error message that explains the cause of the exception.
            </param>
            <param name="innerException">
            The driver exception that caused this exception.
            </param>
            <lastupdated>9/16/2016 9:13:53 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.ModularInstrumentsException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the  <see cref="T:NationalInstruments.ModularInstruments.ModularInstrumentsException"/> class with the specified error message and modular instruments driver error code.
            </summary>
            <param name="message">
            The error message that explains the cause of the exception.
            </param>
            <param name="error">
            The modular instruments driver error code that caused this exception to be thrown.
            </param>
            <lastupdated>9/16/2016 9:13:53 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.ModularInstrumentsException.#ctor(System.String,System.Int32,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ModularInstruments.ModularInstrumentsException"/> class with the specified error message, modular instruments driver error code, and reference to the inner exception that is the cause of the exception.
            </summary>
            <param name="message">
            The error message that explains the cause of the exception.
            </param>
            <param name="error">
            The modular instruments driver error code that caused this exception to be thrown.
            </param>
            <param name="innerException">
            The driver exception that caused this exception.
            </param>
            <lastupdated>9/16/2016 9:13:55 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.ModularInstrumentsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ModularInstruments.ModularInstrumentsException"/> class 
            using the serialized data.
            </summary>
            <param name="info">
            Object that holds the serialized object data.
            </param>
            <param name="context">
            Contextual information about the source or destination.
            </param>
            <lastupdated>9/16/2016 9:13:52 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.ModularInstrumentsException.Error">
            <summary>
            Gets the modular instruments driver code for the error that occurred.
            </summary>
            <value>
            The modular instruments driver code for the error that occurred.
            </value>
            <lastupdated>9/16/2016 9:13:50 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.ModularInstrumentsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object with information about the exception.
            </summary>
            <param name="info">
            Object that holds the serialized object data.
            </param>
            <param name="context">
            Contextual information about the source or destination.
            </param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="info"/> is <see langword="null"/>.
            </exception>
            <lastupdated>12/8/2006 2:17:35 PM</lastupdated>
            <updatedby>NI</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.ModularInstrumentsException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <exclude/>
            <lastupdated>9/16/2016 9:13:51 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.ModularInstrumentsWarning">
            <summary>
            Represents a warning received from the modular instruments driver.
            </summary>
            <remarks>
            When this API makes calls into the underlying modular instruments driver, warnings may occur due to invalid configuration states, invalid parameters, and other factors. When this happens, the warnings are exposed through this class.
            </remarks>
            <threadsafety safety="unsafe"/>
            <lastupdated>9/16/2016 9:13:57 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="E:NationalInstruments.ModularInstruments.ModularInstrumentsWarning.Warning">
            <summary>
            Gets or sets an event that occurs when a modular instruments driver method generates a warning.
            </summary>
            <remarks>
            Use this event to check for any warnings that may occur after you invoke a modular instruments driver method.
            </remarks>
            <lastupdated>9/16/2016 9:13:58 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.ModularInstrumentsWarning.SynchronizeCallbacks">
            <summary>
            Gets or sets a value indicating whether events and callback delegates are invoked.
            </summary>
            <value>
             <see langword="true"/> if events and callbacks are invoked through the <see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)"/> or <see cref="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)"/> methods; otherwise, events and callbacks are invoked directly. The default value is <see langword="false"/>.
            </value>
            <remarks>
            In some cases, callbacks and event handlers are executed in a different thread than the rest of the program. Therefore, you must take special care when accessing objects that 
            have thread affinity, such as UI controls, from these callbacks and event handlers. 
            </remarks>
            <lastupdated>9/16/2016 9:13:57 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.ModularInstrumentsWarningEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:NationalInstruments.ModularInstruments.ModularInstrumentsWarning.Warning"/> event.
            </summary>
            <param name="sender">
            The source of the event.
            </param>
            <param name="e">
            An instance of <see cref="T:NationalInstruments.ModularInstruments.ModularInstrumentsWarningEventArgs"/> that contains the event data.
            </param>
            <lastupdated>10/27/2006 1:16:43 PM</lastupdated>
            <updatedby>NI</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.ModularInstruments.ModularInstrumentsWarningEventArgs">
            <summary>
            Provides data for the <see cref="E:NationalInstruments.ModularInstruments.ModularInstrumentsWarning.Warning"/> event.
            </summary>
            <threadsafety safety="unsafe"/>
            <remarks>
            This object contains event data for whenever there is a <see cref="T:NationalInstruments.ModularInstruments.ModularInstrumentsWarning"/>  event is raised.
            </remarks>
            <lastupdated>9/16/2016 9:13:59 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.ModularInstrumentsWarningEventArgs.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.ModularInstruments.ModularInstrumentsWarningEventArgs"/> class.
            </summary>
            <param name="errorCode">
            The warning code of the Modular Instruments driver warning that has occurred.
            </param>
            <param name="message">
            The explanation of the warning that has occurred.
            </param>
            <lastupdated>12/5/2006 3:33:47 PM</lastupdated>
            <updatedby>NI</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.ModularInstrumentsWarningEventArgs.Message">
            <summary>
            Gets the explanation for the modular instruments driver warning that has occurred.
            </summary>
            <value>
            The explanation of the modular instruments driver warning.
            </value>
            <lastupdated>9/16/2016 9:14:01 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.ModularInstruments.ModularInstrumentsWarningEventArgs.ErrorCode">
            <summary>
            Gets the warning code for the modular instruments driver warning that has occurred.
            </summary>
            <value>
            The value of the warning code.
            </value>
            <lastupdated>9/16/2016 9:14:00 AM</lastupdated>
            <updatedby>sheien</updatedby>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.ModularInstruments.ModularInstrumentsWarningEventArgs.ToString">
            <summary>
            Returns the string representation of the value of this instance.
            </summary>
            <returns>
            A string that represents the value of this instance.
            </returns>
            <lastupdated>10/27/2006 1:16:11 PM</lastupdated>
            <updatedby>NI</updatedby>
            <approved>True</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase">
            <exclude/>
            <lastupdated>11/13/2006 2:00:32 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase.GetAttributeString(System.Int64,System.String)">
            <exclude/>
            <lastupdated>11/13/2006 2:01:31 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase.GetAttributeDouble(System.Int64,System.String)">
            <exclude/>
            <lastupdated>11/13/2006 2:01:21 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase.GetAttributeInt32(System.Int64,System.String)">
            <exclude/>
            <lastupdated>11/13/2006 2:01:24 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase.GetAttributeInt64(System.Int64,System.String)">
            <exclude/>
            <lastupdated>7/6/2016</lastupdated>
            <updatedby>Vijet Patankar</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase.GetAttributeBoolean(System.Int64,System.String)">
            <exclude/>
            <lastupdated>11/13/2006 2:01:16 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase.GetAttributeSession(System.Int64,System.String)">
            <exclude/>
            <lastupdated>11/13/2006 2:01:28 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase.SetAttributeString(System.Int64,System.String,System.String)">
            <exclude/>
            <lastupdated>11/13/2006 2:01:47 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase.SetAttributeDouble(System.Int64,System.String,System.Double)">
            <exclude/>
            <lastupdated>11/13/2006 2:01:37 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase.SetAttributeBoolean(System.Int64,System.String,System.Boolean)">
            <exclude/>
            <lastupdated>11/13/2006 2:01:34 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase.SetAttributeSession(System.Int64,System.String,System.IntPtr)">
            <exclude/>
            <lastupdated>11/13/2006 2:01:43 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase.SetAttributeInt32(System.Int64,System.String,System.Int32)">
            <exclude/>
            <lastupdated>11/13/2006 2:01:40 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.AdvancedPropertyAccessServiceImplBase.SetAttributeInt64(System.Int64,System.String,System.Int32)">
            <exclude/>
            <lastupdated>7/6/2016</lastupdated>
            <updatedby>Vijet Patankar</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.DriverIdentifierAttribute">
            <exclude/>
            <lastupdated>11/13/2006 2:05:38 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.DriverIdentifierAttribute.#ctor(System.String)">
            <exclude/>
            <lastupdated>11/13/2006 2:05:31 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="P:NationalInstruments.Restricted.DriverIdentifierAttribute.DriverName">
            <exclude/>
            <lastupdated>11/13/2006 2:05:34 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="T:NationalInstruments.Restricted.WarningHelper">
            <exclude/>
            <lastupdated>11/13/2006 2:05:46 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
        <member name="M:NationalInstruments.Restricted.WarningHelper.Warn(System.Int32,System.String,System.Object)">
            <exclude/>
            <lastupdated>11/13/2006 2:05:43 PM</lastupdated>
            <updatedby>Mahesh</updatedby>
            <approved>False</approved>
        </member>
    </members>
</doc>
